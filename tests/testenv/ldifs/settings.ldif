dn: olcDatabase={1}mdb,cn=config
changeType: modify
replace: olcRootPW
olcRootPW: {SSHA}wWpIvu+DAeRzfM5ldoypmEJLZg7GP5Hv
-
replace: olcSuffix
olcSuffix: dc=bonsai,dc=test
-
replace: olcRootDN
olcRootDN: cn=admin,dc=bonsai,dc=test

dn: cn=config
changeType: modify
#The FQDN of the Kerberos KDC.
replace: olcSaslHost
olcSaslHost: bonsai.test
-
# The Kerberos realm name
replace: olcSaslRealm
olcSaslRealm: BONSAI.test
-
# Set logging
add: olcLogLevel
olcLogLevel: packets
olcLogLevel: conns
olcLogLevel: stats
olcLogLevel: filter
-
replace: olcLogFile
olcLogFile: /var/log/slapd.log
-
#by default, the DN of an authorized Kerberos client takes the form
#uid=<Kerberos principal name>,cn=<Kerberos Realm>,cn=GSSAPI,cn=auth
add: olcAuthzRegexp
olcAuthzRegexp: {0}"^uid=admin,.*,cn=auth" "cn=admin,dc=bonsai,dc=test"
olcAuthzRegexp: {1}"^uid=admin,cn=bonsai.test,cn=GSSAPI,cn=auth" "cn=admin,
 dc=bonsai,dc=test"
olcAuthzRegexp: {2}"uid=([^/]*),cn=bonsai.test,cn=GSSAPI,cn=auth" "cn=$1,
 ou=nerdherd,dc=bonsai,dc=test"
olcAuthzRegexp: {3}"uid=host/([^/]*).bonsai.test,cn=bonsai.test,
 cn=gssapi,cn=auth" "cn=$1,ou=hosts,dc=bonsai,dc=test"
#administrative user map, assumes existence of cn=admin,cn=config
olcAuthzRegexp: {4}"uid=ldap/admin,cn=bonsai.test,cn=gssapi,cn=auth" 
 "cn=admin,cn=config"
olcAuthzRegexp: {5}"^uid=([^,]+).*,cn=[^,]*,cn=auth$" "ldap:///dc=bonsai,
 dc=test??sub?(cn=$1)"
olcAuthzRegexp: CN=user,OU=test,O=bonsai cn=admin,dc=bonsai,dc=test
-
add: olcAuthzPolicy
olcAuthzPolicy: to
-
add: olcTLSCACertificateFile
olcTLSCACertificateFile: /etc/ldap/certs/cacert.pem
-
add: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ldap/certs/server.pem
-
add: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ldap/certs/server.key
-
add: olcTLSVerifyClient
olcTLSVerifyClient: allow
-
add: olcTLSProtocolMin
olcTLSProtocolMin: 3.1
-
replace: olcSizeLimit
olcSizeLimit: 1024

dn: olcDatabase={-1}frontend,cn=config
changetype: modify
replace: olcSizeLimit
olcSizeLimit: 1024